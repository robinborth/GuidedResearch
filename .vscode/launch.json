{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Python: Current File",
            "type": "debugpy",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "justMyCode": false
        },
        {
            "name": "Debug: ICP Optimizer",
            "type": "debugpy",
            "request": "launch",
            "program": "scripts/optimize.py",
            "args": [
                // "tags=['point2plane']",
                // "data.batch_size=1",
                // "trainer.max_iters=20",
                // "trainer.max_optims=1",
                // "scheduler.coarse2fine.milestones=[0]",
                // "scheduler.coarse2fine.scales=[8]",
                // "scheduler.optimizer.milestones=[0,7,10]",
                // "scheduler.optimizer.params=[[global_pose,transl],[neck_pose,eye_pose],[expression_params,shape_params]]",
                // "scheduler.optimizer.optimizer=adam",
                // "scheduler.optimizer.optimizer_params={lr:1e-02}",
                // "scheduler.optimizer.copy_optimizer_state=True",
                // "scheduler.optimizer.optimizer=levenberg_marquardt",
                // "scheduler.optimizer.optimizer_params={lin_solver:pcg}",
                // "scheduler.optimizer.copy_optimizer_state=True",
            ],
            "console": "integratedTerminal",
            "justMyCode": false,
        },
        {
            "name": "Debug: Point2Plane Flame",
            "type": "debugpy",
            "request": "launch",
            "program": "scripts/optimize.py",
            "args": [
                "model=flame",
                "data=flame",
                "logger=tensorboard",
                "model.lr=5e-03",
                "model.init_mode=flame",
                "model.vertices_mask=full",
                "trainer.max_epochs=150",
                "trainer.accelerator=gpu",
                "scheduler.coarse2fine.milestones=[0,100]",
                "scheduler.coarse2fine.scales=[0.1,0.25]",
                "scheduler.optimizer.milestones=[0]",
                "scheduler.optimizer.params=['transl|global_pose']"
            ],
            "console": "integratedTerminal",
            "justMyCode": false,
        },
        {
            "name": "Debug: Create Video",
            "type": "debugpy",
            "request": "launch",
            "program": "scripts/create_video.py",
            "args": [
                "+framerate=30",
                "+video_dir='/home/borth/GuidedResearch/logs/optimize/runs/2024-06-06_09-47-10/render_normal'"
            ],
            "console": "integratedTerminal",
            "justMyCode": false,
        },
        {
            "name": "Debug Triangles Rasterizer",
            "type": "cppdbg",
            "request": "launch",
            "program": "/home/borth/miniconda3/envs/guided/bin/python",
            "args": [
                "${workspaceFolder}/tests/triangles.py"
            ],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "miDebuggerPath": "/usr/bin/gdb",
            "logging": {
                "moduleLoad": true,
                "trace": true,
                "engineLogging": true
            },
            "internalConsoleOptions": "openOnSessionStart"
        },
        {
            "name": "Debug FLAME Rasterizer",
            "type": "cppdbg",
            "request": "launch",
            "program": "/home/borth/miniconda3/envs/guided/bin/python",
            "args": [
                "${workspaceFolder}/tests/flame.py"
            ],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "miDebuggerPath": "/usr/bin/gdb",
            "logging": {
                "moduleLoad": true,
                "trace": true,
                "engineLogging": true
            },
            "internalConsoleOptions": "openOnSessionStart"
        }
    ]
}
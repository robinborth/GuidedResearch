{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Python: Current File",
            "type": "debugpy",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "justMyCode": false
        },
        {
            "name": "Debug: ICP Optimizer",
            "type": "debugpy",
            "request": "launch",
            "program": "scripts/optimize.py",
            "args": [
                "logger=wandb",
                "tags=['point2plane']",
                "model=flame",
                "model.init_mode=kinect",
                "model.vertices_mask=full",
                "model.optimize_frames=10",
                "data=kinect",
                "data.batch_size=10",
                "data.start_frame_idx=19",
                "trainer.max_iters=15",
                "trainer.max_optims=100",
                "trainer.save_interval=1",
                "scheduler.coarse2fine.milestones=[0]",
                "scheduler.coarse2fine.scales=[8]",
                "scheduler.finetune.milestones=[0,3,5]",
                "scheduler.finetune.params=[['global_pose','transl'],['neck_pose'],['shape_params','expression_params']]",
                "scheduler.finetune.lr=[[1e-02,1e-02],[1e-02],[1e-02,1e-02]]"
            ],
            "console": "integratedTerminal",
            "justMyCode": false,
        },
        {
            "name": "Debug: Point2Plane Flame",
            "type": "debugpy",
            "request": "launch",
            "program": "scripts/optimize.py",
            "args": [
                "model=flame",
                "data=flame",
                "logger=tensorboard",
                "model.lr=5e-03",
                "model.init_mode=flame",
                "model.vertices_mask=full",
                "trainer.max_epochs=150",
                "trainer.accelerator=gpu",
                "scheduler.coarse2fine.milestones=[0,100]",
                "scheduler.coarse2fine.scales=[0.1,0.25]",
                "scheduler.finetune.milestones=[0]",
                "scheduler.finetune.params=['transl|global_pose']"
            ],
            "console": "integratedTerminal",
            "justMyCode": false,
        },
        {
            "name": "Debug: Create Video",
            "type": "debugpy",
            "request": "launch",
            "program": "scripts/create_video.py",
            "args": [
                "+framerate=30",
                "+video_dir='/home/borth/GuidedResearch/logs/optimize/runs/2024-06-06_09-47-10/render_normal'"
            ],
            "console": "integratedTerminal",
            "justMyCode": false,
        },
        {
            "name": "Debug Triangles Rasterizer",
            "type": "cppdbg",
            "request": "launch",
            "program": "/home/borth/miniconda3/envs/guided/bin/python",
            "args": [
                "${workspaceFolder}/tests/triangles.py"
            ],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "miDebuggerPath": "/usr/bin/gdb",
            "logging": {
                "moduleLoad": true,
                "trace": true,
                "engineLogging": true
            },
            "internalConsoleOptions": "openOnSessionStart"
        },
        {
            "name": "Debug FLAME Rasterizer",
            "type": "cppdbg",
            "request": "launch",
            "program": "/home/borth/miniconda3/envs/guided/bin/python",
            "args": [
                "${workspaceFolder}/tests/flame.py"
            ],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "miDebuggerPath": "/usr/bin/gdb",
            "logging": {
                "moduleLoad": true,
                "trace": true,
                "engineLogging": true
            },
            "internalConsoleOptions": "openOnSessionStart"
        }
    ]
}
{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Python: Current File",
            "type": "debugpy",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "justMyCode": false
        },
        {
            "name": "Debug: Point2Plane Shape",
            "type": "debugpy",
            "request": "launch",
            "program": "scripts/optimize.py",
            "args": [
                "model=point2plane",
                "data=kinect",
            ],
            "console": "integratedTerminal",
            "justMyCode": false,
        },
        {
            "name": "Debug: Point2Point Shape",
            "type": "debugpy",
            "request": "launch",
            "program": "scripts/optimize.py",
            "args": [
                "model=point2point",
                "data=kinect",
                "logger=wandb",
                "model.lr=1e-02",
                "model.init_mode=kinect",
                "model.vertices_mask=face",
                "trainer.max_epochs=150",
                "trainer.accelerator=gpu",
                "callbacks.coarse2fine_scheduler.milestones=[0]",
                "callbacks.coarse2fine_scheduler.image_scales=[0.25]",
                "callbacks.finetune_scheduler.milestones=[0,30]",
                "callbacks.finetune_scheduler.params=['global_pose|transl','shape_params']"
            ],
            "console": "integratedTerminal",
            "justMyCode": false,
        },
        {
            "name": "Debug: Point2Plane FLAME",
            "type": "debugpy",
            "request": "launch",
            "program": "scripts/optimize.py",
            "args": [
                "model=point2plane",
                "data=flame",
            ],
            "console": "integratedTerminal",
            "justMyCode": false,
        },
        {
            "name": "Debug: Point2Point FLAME",
            "type": "debugpy",
            "request": "launch",
            "program": "scripts/optimize.py",
            "args": [
                "model=point2point",
                "logger=wandb",
                "data=flame",
                "model.lr=1e-03",
                "model.init_mode=flame",
                "model.vertices_mask=full",
                "trainer.max_epochs=100",
                "trainer.accelerator=gpu",
                "callbacks.coarse2fine_scheduler.milestones=[0]",
                "callbacks.coarse2fine_scheduler.image_scales=[0.5]"
            ],
            "console": "integratedTerminal",
            "justMyCode": false,
        },
        {
            "name": "Debug Triangles Rasterizer",
            "type": "cppdbg",
            "request": "launch",
            "program": "/home/borth/miniconda3/envs/guided/bin/python",
            "args": [
                "${workspaceFolder}/tests/triangles.py"
            ],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "miDebuggerPath": "/usr/bin/gdb",
            "logging": {
                "moduleLoad": true,
                "trace": true,
                "engineLogging": true
            },
            "internalConsoleOptions": "openOnSessionStart"
        },
        {
            "name": "Debug FLAME Rasterizer",
            "type": "cppdbg",
            "request": "launch",
            "program": "/home/borth/miniconda3/envs/guided/bin/python",
            "args": [
                "${workspaceFolder}/tests/flame.py"
            ],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "miDebuggerPath": "/usr/bin/gdb",
            "logging": {
                "moduleLoad": true,
                "trace": true,
                "engineLogging": true
            },
            "internalConsoleOptions": "openOnSessionStart"
        }
    ]
}